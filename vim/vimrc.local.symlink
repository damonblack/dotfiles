map <leader>t <C-P>
map <leader>v :vsp<CR>
map <leader>h h
map <leader>j j
map <leader>k k
map <leader>l l
map <leader>> l
map <leader>< h
map <leader>= =


nmap <leader>, :tabnew<CR>
nmap <leader>. :tabnext<CR>
nmap .<leader> :tabpre<CR>
nnoremap ; :
" Run Ruby unit tests with gT (for all) or gt (only test under
" cursor) in command mode
augroup RubyTests
  au!
  autocmd BufRead,BufNewFile *_test.rb,test_*.rb
    \ :nmap gt V:<C-U>!$HOME/.vim/bin/ruby-run-focused-unit-test
    \ % <C-R>=line("'<")<CR>p <CR>|
    \ :nmap gT :<C-U>!testdrb %<CR>
  autocmd BufRead,BufNewFile *_spec.rb
    \ :nmap gs V:<C-U>!$HOME/.vim/bin/ruby-run-focused-spec
    \ % <C-R>=line("'<")<CR>p <CR>|
    \ :nmap gS :<C-U>!spring rspec %<CR>
augroup END
"nmap gs :call RunNearestSpec()<CR>
"nmap gS :call RunCurrentSpecFile()<CR>


set shiftwidth=2                " Use indents of 2 spaces
set tabstop=2                   " An indentation every four columns
set softtabstop=2               " Let backspace delete indent
set wrap
set nolist
set spell&
set nospell
set background=dark
colorscheme solarized

let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=DarkGrey   ctermbg=0*
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=Grey ctermbg=0*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let b:syntastic_javascript_eslint_exec = '~/development/xogrp/xo-guest-services/app/frontend/node_modules/.bin/eslint'
let g:syntastic_javascript_checkers = ['eslint']
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

:doautocmd FileType
